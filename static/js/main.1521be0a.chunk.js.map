{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","_jsxs","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","setTitle","useState","setUserId","currecntTodos","setCurrentTodos","titleError","setTitleError","userError","setUserError","handleSubmit","event","newTodo","preventDefault","Math","max","myTodos","onSubmit","type","value","onChange","target","placeholder","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1521be0a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/userInfo';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/postInfo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${cn({ 'TodoInfo--completed': todo.completed })}`}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/postInfo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/postInfo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find((user) => user.id === userId)\n    || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  id: todo.id,\n  title: todo.title,\n  completed: todo.completed,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [currecntTodos, setCurrentTodos] = useState<Todo[]>(todos);\n\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const addTodo = (newTodo: Todo) => {\n    setCurrentTodos(myTodos => [...myTodos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError('');\n    setUserError('');\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (userId === 0) {\n      setUserError('Please choose a user');\n    }\n\n    if (title && userId) {\n      addTodo({\n        id: Math.max(...currecntTodos.map((todo) => todo.id)) + 1,\n        title,\n        completed: false,\n        user: getUserById(userId),\n      });\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError('');\n            }}\n            placeholder=\"Enter a title\"\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setUserError('');\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onSubmit={handleSubmit}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currecntTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}